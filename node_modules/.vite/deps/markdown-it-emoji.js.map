{
  "version": 3,
  "sources": ["../../markdown-it-emoji/lib/data/shortcuts.js", "../../markdown-it-emoji/lib/render.js", "../../markdown-it-emoji/lib/replace.js", "../../markdown-it-emoji/lib/normalize_opts.js", "../../markdown-it-emoji/bare.js", "../../markdown-it-emoji/index.js", "dep:markdown-it-emoji"],
  "sourcesContent": ["// Emoticons -> Emoji mapping.\n//\n// (!) Some patterns skipped, to avoid collisions\n// without increase matcher complicity. Than can change in future.\n//\n// Places to look for more emoticons info:\n//\n// - http://en.wikipedia.org/wiki/List_of_emoticons#Western\n// - https://github.com/wooorm/emoticon/blob/master/Support.md\n// - http://factoryjoe.com/projects/emoticons/\n//\n'use strict';\n\nmodule.exports = {\n  angry:            [ '>:(', '>:-(' ],\n  blush:            [ ':\")', ':-\")' ],\n  broken_heart:     [ '</3', '<\\\\3' ],\n  // :\\ and :-\\ not used because of conflict with markdown escaping\n  confused:         [ ':/', ':-/' ], // twemoji shows question\n  cry:              [ \":'(\", \":'-(\", ':,(', ':,-(' ],\n  frowning:         [ ':(', ':-(' ],\n  heart:            [ '<3' ],\n  imp:              [ ']:(', ']:-(' ],\n  innocent:         [ 'o:)', 'O:)', 'o:-)', 'O:-)', '0:)', '0:-)' ],\n  joy:              [ \":')\", \":'-)\", ':,)', ':,-)', \":'D\", \":'-D\", ':,D', ':,-D' ],\n  kissing:          [ ':*', ':-*' ],\n  laughing:         [ 'x-)', 'X-)' ],\n  neutral_face:     [ ':|', ':-|' ],\n  open_mouth:       [ ':o', ':-o', ':O', ':-O' ],\n  rage:             [ ':@', ':-@' ],\n  smile:            [ ':D', ':-D' ],\n  smiley:           [ ':)', ':-)' ],\n  smiling_imp:      [ ']:)', ']:-)' ],\n  sob:              [ \":,'(\", \":,'-(\", ';(', ';-(' ],\n  stuck_out_tongue: [ ':P', ':-P' ],\n  sunglasses:       [ '8-)', 'B-)' ],\n  sweat:            [ ',:(', ',:-(' ],\n  sweat_smile:      [ ',:)', ',:-)' ],\n  unamused:         [ ':s', ':-S', ':z', ':-Z', ':$', ':-$' ],\n  wink:             [ ';)', ';-)' ]\n};\n", "'use strict';\n\nmodule.exports = function emoji_html(tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\n", "// Emojies & shortcuts replacement logic.\n//\n// Note: In theory, it could be faster to parse :smile: in inline chain and\n// leave only shortcuts here. But, who care...\n//\n\n'use strict';\n\n\nmodule.exports = function create_rule(md, emojies, shortcuts, scanRE, replaceRE) {\n  var arrayReplaceAt = md.utils.arrayReplaceAt,\n      ucm = md.utils.lib.ucmicro,\n      ZPCc = new RegExp([ ucm.Z.source, ucm.P.source, ucm.Cc.source ].join('|'));\n\n  function splitTextToken(text, level, Token) {\n    var token, last_pos = 0, nodes = [];\n\n    text.replace(replaceRE, function (match, offset, src) {\n      var emoji_name;\n      // Validate emoji name\n      if (shortcuts.hasOwnProperty(match)) {\n        // replace shortcut with full name\n        emoji_name = shortcuts[match];\n\n        // Don't allow letters before any shortcut (as in no \":/\" in http://)\n        if (offset > 0 && !ZPCc.test(src[offset - 1])) {\n          return;\n        }\n\n        // Don't allow letters after any shortcut\n        if (offset + match.length < src.length && !ZPCc.test(src[offset + match.length])) {\n          return;\n        }\n      } else {\n        emoji_name = match.slice(1, -1);\n      }\n\n      // Add new tokens to pending list\n      if (offset > last_pos) {\n        token         = new Token('text', '', 0);\n        token.content = text.slice(last_pos, offset);\n        nodes.push(token);\n      }\n\n      token         = new Token('emoji', '', 0);\n      token.markup  = emoji_name;\n      token.content = emojies[emoji_name];\n      nodes.push(token);\n\n      last_pos = offset + match.length;\n    });\n\n    if (last_pos < text.length) {\n      token         = new Token('text', '', 0);\n      token.content = text.slice(last_pos);\n      nodes.push(token);\n    }\n\n    return nodes;\n  }\n\n  return function emoji_replace(state) {\n    var i, j, l, tokens, token,\n        blockTokens = state.tokens,\n        autolinkLevel = 0;\n\n    for (j = 0, l = blockTokens.length; j < l; j++) {\n      if (blockTokens[j].type !== 'inline') { continue; }\n      tokens = blockTokens[j].children;\n\n      // We scan from the end, to keep position when new tags added.\n      // Use reversed logic in links start/end match\n      for (i = tokens.length - 1; i >= 0; i--) {\n        token = tokens[i];\n\n        if (token.type === 'link_open' || token.type === 'link_close') {\n          if (token.info === 'auto') { autolinkLevel -= token.nesting; }\n        }\n\n        if (token.type === 'text' && autolinkLevel === 0 && scanRE.test(token.content)) {\n          // replace current node\n          blockTokens[j].children = tokens = arrayReplaceAt(\n            tokens, i, splitTextToken(token.content, token.level, state.Token)\n          );\n        }\n      }\n    }\n  };\n};\n", "// Convert input options to more useable format\n// and compile search regexp\n\n'use strict';\n\n\nfunction quoteRE(str) {\n  return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&');\n}\n\n\nmodule.exports = function normalize_opts(options) {\n  var emojies = options.defs,\n      shortcuts;\n\n  // Filter emojies by whitelist, if needed\n  if (options.enabled.length) {\n    emojies = Object.keys(emojies).reduce(function (acc, key) {\n      if (options.enabled.indexOf(key) >= 0) {\n        acc[key] = emojies[key];\n      }\n      return acc;\n    }, {});\n  }\n\n  // Flatten shortcuts to simple object: { alias: emoji_name }\n  shortcuts = Object.keys(options.shortcuts).reduce(function (acc, key) {\n    // Skip aliases for filtered emojies, to reduce regexp\n    if (!emojies[key]) { return acc; }\n\n    if (Array.isArray(options.shortcuts[key])) {\n      options.shortcuts[key].forEach(function (alias) {\n        acc[alias] = key;\n      });\n      return acc;\n    }\n\n    acc[options.shortcuts[key]] = key;\n    return acc;\n  }, {});\n\n  var keys = Object.keys(emojies),\n      names;\n\n  // If no definitions are given, return empty regex to avoid replacements with 'undefined'.\n  if (keys.length === 0) {\n    names = '^$';\n  } else {\n    // Compile regexp\n    names = keys\n      .map(function (name) { return ':' + name + ':'; })\n      .concat(Object.keys(shortcuts))\n      .sort()\n      .reverse()\n      .map(function (name) { return quoteRE(name); })\n      .join('|');\n  }\n  var scanRE = RegExp(names);\n  var replaceRE = RegExp(names, 'g');\n\n  return {\n    defs: emojies,\n    shortcuts: shortcuts,\n    scanRE: scanRE,\n    replaceRE: replaceRE\n  };\n};\n", "'use strict';\n\n\nvar emoji_html        = require('./lib/render');\nvar emoji_replace     = require('./lib/replace');\nvar normalize_opts    = require('./lib/normalize_opts');\n\n\nmodule.exports = function emoji_plugin(md, options) {\n  var defaults = {\n    defs: {},\n    shortcuts: {},\n    enabled: []\n  };\n\n  var opts = normalize_opts(md.utils.assign({}, defaults, options || {}));\n\n  md.renderer.rules.emoji = emoji_html;\n\n  md.core.ruler.after(\n    'linkify',\n    'emoji',\n    emoji_replace(md, opts.defs, opts.shortcuts, opts.scanRE, opts.replaceRE)\n  );\n};\n", "'use strict';\n\n\nvar emojies_defs      = require('./lib/data/full.json');\nvar emojies_shortcuts = require('./lib/data/shortcuts');\nvar bare_emoji_plugin = require('./bare');\n\n\nmodule.exports = function emoji_plugin(md, options) {\n  var defaults = {\n    defs: emojies_defs,\n    shortcuts: emojies_shortcuts,\n    enabled: []\n  };\n\n  var opts = md.utils.assign({}, defaults, options || {});\n\n  bare_emoji_plugin(md, opts);\n};\n", "export default require(\"./node_modules/markdown-it-emoji/index.js\");"],
  "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",
  "names": []
}
