{
  "version": 3,
  "sources": ["../../markdown-it-footnote/index.js", "dep:markdown-it-footnote"],
  "sourcesContent": ["// Process footnotes\n//\n'use strict';\n\n////////////////////////////////////////////////////////////////////////////////\n// Renderer partials\n\nfunction render_footnote_anchor_name(tokens, idx, options, env/*, slf*/) {\n  var n = Number(tokens[idx].meta.id + 1).toString();\n  var prefix = '';\n\n  if (typeof env.docId === 'string') {\n    prefix = '-' + env.docId + '-';\n  }\n\n  return prefix + n;\n}\n\nfunction render_footnote_caption(tokens, idx/*, options, env, slf*/) {\n  var n = Number(tokens[idx].meta.id + 1).toString();\n\n  if (tokens[idx].meta.subId > 0) {\n    n += ':' + tokens[idx].meta.subId;\n  }\n\n  return '[' + n + ']';\n}\n\nfunction render_footnote_ref(tokens, idx, options, env, slf) {\n  var id      = slf.rules.footnote_anchor_name(tokens, idx, options, env, slf);\n  var caption = slf.rules.footnote_caption(tokens, idx, options, env, slf);\n  var refid   = id;\n\n  if (tokens[idx].meta.subId > 0) {\n    refid += ':' + tokens[idx].meta.subId;\n  }\n\n  return '<sup class=\"footnote-ref\"><a href=\"#fn' + id + '\" id=\"fnref' + refid + '\">' + caption + '</a></sup>';\n}\n\nfunction render_footnote_block_open(tokens, idx, options) {\n  return (options.xhtmlOut ? '<hr class=\"footnotes-sep\" />\\n' : '<hr class=\"footnotes-sep\">\\n') +\n         '<section class=\"footnotes\">\\n' +\n         '<ol class=\"footnotes-list\">\\n';\n}\n\nfunction render_footnote_block_close() {\n  return '</ol>\\n</section>\\n';\n}\n\nfunction render_footnote_open(tokens, idx, options, env, slf) {\n  var id = slf.rules.footnote_anchor_name(tokens, idx, options, env, slf);\n\n  if (tokens[idx].meta.subId > 0) {\n    id += ':' + tokens[idx].meta.subId;\n  }\n\n  return '<li id=\"fn' + id + '\" class=\"footnote-item\">';\n}\n\nfunction render_footnote_close() {\n  return '</li>\\n';\n}\n\nfunction render_footnote_anchor(tokens, idx, options, env, slf) {\n  var id = slf.rules.footnote_anchor_name(tokens, idx, options, env, slf);\n\n  if (tokens[idx].meta.subId > 0) {\n    id += ':' + tokens[idx].meta.subId;\n  }\n\n  /* \u21A9 with escape code to prevent display as Apple Emoji on iOS */\n  return ' <a href=\"#fnref' + id + '\" class=\"footnote-backref\">\\u21a9\\uFE0E</a>';\n}\n\n\nmodule.exports = function footnote_plugin(md) {\n  var parseLinkLabel = md.helpers.parseLinkLabel,\n      isSpace = md.utils.isSpace;\n\n  md.renderer.rules.footnote_ref          = render_footnote_ref;\n  md.renderer.rules.footnote_block_open   = render_footnote_block_open;\n  md.renderer.rules.footnote_block_close  = render_footnote_block_close;\n  md.renderer.rules.footnote_open         = render_footnote_open;\n  md.renderer.rules.footnote_close        = render_footnote_close;\n  md.renderer.rules.footnote_anchor       = render_footnote_anchor;\n\n  // helpers (only used in other rules, no tokens are attached to those)\n  md.renderer.rules.footnote_caption      = render_footnote_caption;\n  md.renderer.rules.footnote_anchor_name  = render_footnote_anchor_name;\n\n  // Process footnote block definition\n  function footnote_def(state, startLine, endLine, silent) {\n    var oldBMark, oldTShift, oldSCount, oldParentType, pos, label, token,\n        initial, offset, ch, posAfterColon,\n        start = state.bMarks[startLine] + state.tShift[startLine],\n        max = state.eMarks[startLine];\n\n    // line should be at least 5 chars - \"[^x]:\"\n    if (start + 4 > max) { return false; }\n\n    if (state.src.charCodeAt(start) !== 0x5B/* [ */) { return false; }\n    if (state.src.charCodeAt(start + 1) !== 0x5E/* ^ */) { return false; }\n\n    for (pos = start + 2; pos < max; pos++) {\n      if (state.src.charCodeAt(pos) === 0x20) { return false; }\n      if (state.src.charCodeAt(pos) === 0x5D /* ] */) {\n        break;\n      }\n    }\n\n    if (pos === start + 2) { return false; } // no empty footnote labels\n    if (pos + 1 >= max || state.src.charCodeAt(++pos) !== 0x3A /* : */) { return false; }\n    if (silent) { return true; }\n    pos++;\n\n    if (!state.env.footnotes) { state.env.footnotes = {}; }\n    if (!state.env.footnotes.refs) { state.env.footnotes.refs = {}; }\n    label = state.src.slice(start + 2, pos - 2);\n    state.env.footnotes.refs[':' + label] = -1;\n\n    token       = new state.Token('footnote_reference_open', '', 1);\n    token.meta  = { label: label };\n    token.level = state.level++;\n    state.tokens.push(token);\n\n    oldBMark = state.bMarks[startLine];\n    oldTShift = state.tShift[startLine];\n    oldSCount = state.sCount[startLine];\n    oldParentType = state.parentType;\n\n    posAfterColon = pos;\n    initial = offset = state.sCount[startLine] + pos - (state.bMarks[startLine] + state.tShift[startLine]);\n\n    while (pos < max) {\n      ch = state.src.charCodeAt(pos);\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          offset += 4 - offset % 4;\n        } else {\n          offset++;\n        }\n      } else {\n        break;\n      }\n\n      pos++;\n    }\n\n    state.tShift[startLine] = pos - posAfterColon;\n    state.sCount[startLine] = offset - initial;\n\n    state.bMarks[startLine] = posAfterColon;\n    state.blkIndent += 4;\n    state.parentType = 'footnote';\n\n    if (state.sCount[startLine] < state.blkIndent) {\n      state.sCount[startLine] += state.blkIndent;\n    }\n\n    state.md.block.tokenize(state, startLine, endLine, true);\n\n    state.parentType = oldParentType;\n    state.blkIndent -= 4;\n    state.tShift[startLine] = oldTShift;\n    state.sCount[startLine] = oldSCount;\n    state.bMarks[startLine] = oldBMark;\n\n    token       = new state.Token('footnote_reference_close', '', -1);\n    token.level = --state.level;\n    state.tokens.push(token);\n\n    return true;\n  }\n\n  // Process inline footnotes (^[...])\n  function footnote_inline(state, silent) {\n    var labelStart,\n        labelEnd,\n        footnoteId,\n        token,\n        tokens,\n        max = state.posMax,\n        start = state.pos;\n\n    if (start + 2 >= max) { return false; }\n    if (state.src.charCodeAt(start) !== 0x5E/* ^ */) { return false; }\n    if (state.src.charCodeAt(start + 1) !== 0x5B/* [ */) { return false; }\n\n    labelStart = start + 2;\n    labelEnd = parseLinkLabel(state, start + 1);\n\n    // parser failed to find ']', so it's not a valid note\n    if (labelEnd < 0) { return false; }\n\n    // We found the end of the link, and know for a fact it's a valid link;\n    // so all that's left to do is to call tokenizer.\n    //\n    if (!silent) {\n      if (!state.env.footnotes) { state.env.footnotes = {}; }\n      if (!state.env.footnotes.list) { state.env.footnotes.list = []; }\n      footnoteId = state.env.footnotes.list.length;\n\n      state.md.inline.parse(\n        state.src.slice(labelStart, labelEnd),\n        state.md,\n        state.env,\n        tokens = []\n      );\n\n      token      = state.push('footnote_ref', '', 0);\n      token.meta = { id: footnoteId };\n\n      state.env.footnotes.list[footnoteId] = {\n        content: state.src.slice(labelStart, labelEnd),\n        tokens: tokens\n      };\n    }\n\n    state.pos = labelEnd + 1;\n    state.posMax = max;\n    return true;\n  }\n\n  // Process footnote references ([^...])\n  function footnote_ref(state, silent) {\n    var label,\n        pos,\n        footnoteId,\n        footnoteSubId,\n        token,\n        max = state.posMax,\n        start = state.pos;\n\n    // should be at least 4 chars - \"[^x]\"\n    if (start + 3 > max) { return false; }\n\n    if (!state.env.footnotes || !state.env.footnotes.refs) { return false; }\n    if (state.src.charCodeAt(start) !== 0x5B/* [ */) { return false; }\n    if (state.src.charCodeAt(start + 1) !== 0x5E/* ^ */) { return false; }\n\n    for (pos = start + 2; pos < max; pos++) {\n      if (state.src.charCodeAt(pos) === 0x20) { return false; }\n      if (state.src.charCodeAt(pos) === 0x0A) { return false; }\n      if (state.src.charCodeAt(pos) === 0x5D /* ] */) {\n        break;\n      }\n    }\n\n    if (pos === start + 2) { return false; } // no empty footnote labels\n    if (pos >= max) { return false; }\n    pos++;\n\n    label = state.src.slice(start + 2, pos - 1);\n    if (typeof state.env.footnotes.refs[':' + label] === 'undefined') { return false; }\n\n    if (!silent) {\n      if (!state.env.footnotes.list) { state.env.footnotes.list = []; }\n\n      if (state.env.footnotes.refs[':' + label] < 0) {\n        footnoteId = state.env.footnotes.list.length;\n        state.env.footnotes.list[footnoteId] = { label: label, count: 0 };\n        state.env.footnotes.refs[':' + label] = footnoteId;\n      } else {\n        footnoteId = state.env.footnotes.refs[':' + label];\n      }\n\n      footnoteSubId = state.env.footnotes.list[footnoteId].count;\n      state.env.footnotes.list[footnoteId].count++;\n\n      token      = state.push('footnote_ref', '', 0);\n      token.meta = { id: footnoteId, subId: footnoteSubId, label: label };\n    }\n\n    state.pos = pos;\n    state.posMax = max;\n    return true;\n  }\n\n  // Glue footnote tokens to end of token stream\n  function footnote_tail(state) {\n    var i, l, j, t, lastParagraph, list, token, tokens, current, currentLabel,\n        insideRef = false,\n        refTokens = {};\n\n    if (!state.env.footnotes) { return; }\n\n    state.tokens = state.tokens.filter(function (tok) {\n      if (tok.type === 'footnote_reference_open') {\n        insideRef = true;\n        current = [];\n        currentLabel = tok.meta.label;\n        return false;\n      }\n      if (tok.type === 'footnote_reference_close') {\n        insideRef = false;\n        // prepend ':' to avoid conflict with Object.prototype members\n        refTokens[':' + currentLabel] = current;\n        return false;\n      }\n      if (insideRef) { current.push(tok); }\n      return !insideRef;\n    });\n\n    if (!state.env.footnotes.list) { return; }\n    list = state.env.footnotes.list;\n\n    token = new state.Token('footnote_block_open', '', 1);\n    state.tokens.push(token);\n\n    for (i = 0, l = list.length; i < l; i++) {\n      token      = new state.Token('footnote_open', '', 1);\n      token.meta = { id: i, label: list[i].label };\n      state.tokens.push(token);\n\n      if (list[i].tokens) {\n        tokens = [];\n\n        token          = new state.Token('paragraph_open', 'p', 1);\n        token.block    = true;\n        tokens.push(token);\n\n        token          = new state.Token('inline', '', 0);\n        token.children = list[i].tokens;\n        token.content  = list[i].content;\n        tokens.push(token);\n\n        token          = new state.Token('paragraph_close', 'p', -1);\n        token.block    = true;\n        tokens.push(token);\n\n      } else if (list[i].label) {\n        tokens = refTokens[':' + list[i].label];\n      }\n\n      if (tokens) state.tokens = state.tokens.concat(tokens);\n      if (state.tokens[state.tokens.length - 1].type === 'paragraph_close') {\n        lastParagraph = state.tokens.pop();\n      } else {\n        lastParagraph = null;\n      }\n\n      t = list[i].count > 0 ? list[i].count : 1;\n      for (j = 0; j < t; j++) {\n        token      = new state.Token('footnote_anchor', '', 0);\n        token.meta = { id: i, subId: j, label: list[i].label };\n        state.tokens.push(token);\n      }\n\n      if (lastParagraph) {\n        state.tokens.push(lastParagraph);\n      }\n\n      token = new state.Token('footnote_close', '', -1);\n      state.tokens.push(token);\n    }\n\n    token = new state.Token('footnote_block_close', '', -1);\n    state.tokens.push(token);\n  }\n\n  md.block.ruler.before('reference', 'footnote_def', footnote_def, { alt: [ 'paragraph', 'reference' ] });\n  md.inline.ruler.after('image', 'footnote_inline', footnote_inline);\n  md.inline.ruler.after('footnote_inline', 'footnote_ref', footnote_ref);\n  md.core.ruler.after('inline', 'footnote_tail', footnote_tail);\n};\n", "export default require(\"./node_modules/markdown-it-footnote/index.js\");"],
  "mappings": "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",
  "names": []
}
